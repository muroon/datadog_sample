// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EmptyParams struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyParams) Reset()         { *m = EmptyParams{} }
func (m *EmptyParams) String() string { return proto.CompactTextString(m) }
func (*EmptyParams) ProtoMessage()    {}
func (*EmptyParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{0}
}

func (m *EmptyParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyParams.Unmarshal(m, b)
}
func (m *EmptyParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyParams.Marshal(b, m, deterministic)
}
func (m *EmptyParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyParams.Merge(m, src)
}
func (m *EmptyParams) XXX_Size() int {
	return xxx_messageInfo_EmptyParams.Size(m)
}
func (m *EmptyParams) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyParams.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyParams proto.InternalMessageInfo

type Message struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{1}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Message) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type Messages struct {
	List                 []*Message `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Messages) Reset()         { *m = Messages{} }
func (m *Messages) String() string { return proto.CompactTextString(m) }
func (*Messages) ProtoMessage()    {}
func (*Messages) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{2}
}

func (m *Messages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Messages.Unmarshal(m, b)
}
func (m *Messages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Messages.Marshal(b, m, deterministic)
}
func (m *Messages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Messages.Merge(m, src)
}
func (m *Messages) XXX_Size() int {
	return xxx_messageInfo_Messages.Size(m)
}
func (m *Messages) XXX_DiscardUnknown() {
	xxx_messageInfo_Messages.DiscardUnknown(m)
}

var xxx_messageInfo_Messages proto.InternalMessageInfo

func (m *Messages) GetList() []*Message {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*EmptyParams)(nil), "proto.EmptyParams")
	proto.RegisterType((*Message)(nil), "proto.Message")
	proto.RegisterType((*Messages)(nil), "proto.Messages")
}

func init() { proto.RegisterFile("data.proto", fileDescriptor_871986018790d2fd) }

var fileDescriptor_871986018790d2fd = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8e, 0xbb, 0xca, 0x83, 0x40,
	0x10, 0x85, 0x5d, 0x7f, 0xff, 0xdb, 0x2c, 0x1a, 0x98, 0x4a, 0xac, 0x64, 0xab, 0x6d, 0x22, 0x41,
	0xf3, 0x08, 0x09, 0xa9, 0x04, 0xf1, 0x0d, 0x26, 0xb8, 0x88, 0x10, 0xa3, 0xb8, 0x53, 0x98, 0xb7,
	0x0f, 0x6c, 0x44, 0x62, 0xaa, 0xb9, 0x9c, 0x33, 0x67, 0x3e, 0x80, 0x86, 0x98, 0xb2, 0x71, 0x1a,
	0x78, 0xc0, 0x6f, 0x57, 0x54, 0x08, 0xf2, 0xdc, 0x8f, 0xfc, 0xa8, 0x68, 0xa2, 0xde, 0xaa, 0x3d,
	0xfc, 0x96, 0xc6, 0x5a, 0x6a, 0x0d, 0x46, 0xe0, 0x77, 0x4d, 0x2c, 0x52, 0xa1, 0xc3, 0xda, 0xef,
	0x1a, 0x44, 0x08, 0xd8, 0xcc, 0x1c, 0xfb, 0xa9, 0xd0, 0xff, 0xb5, 0xeb, 0x55, 0x06, 0x7f, 0x8b,
	0xdd, 0xa2, 0x82, 0xe0, 0xd6, 0x59, 0x8e, 0x45, 0xfa, 0xa5, 0x65, 0x1e, 0xbd, 0xde, 0x64, 0x8b,
	0x5c, 0x3b, 0x2d, 0x9f, 0x41, 0x9e, 0x88, 0xa9, 0xa4, 0x3b, 0xb5, 0x66, 0xc2, 0x23, 0xc8, 0x8b,
	0xe1, 0x35, 0x01, 0x97, 0x9b, 0x37, 0xa0, 0x64, 0xb7, 0xcd, 0xb1, 0xca, 0xc3, 0x02, 0x64, 0x35,
	0x58, 0x5e, 0x39, 0xb7, 0x8e, 0xe4, 0x63, 0x56, 0x9e, 0x16, 0x07, 0x71, 0xfd, 0x71, 0xcb, 0xe2,
	0x19, 0x00, 0x00, 0xff, 0xff, 0x63, 0x29, 0xc5, 0x2f, 0x03, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DataManagerClient is the client API for DataManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataManagerClient interface {
	//rpc UnaryTest (Message) returns (ResponseMessage) {}
	//rpc ServerStreamTest (RequestMessage) returns (stream ResponseMessage) {}
	//rpc ClientStreamTest (stream RequestMessage) returns (ResponseMessage) {}
	//rpc BiStreamTest (stream RequestMessage) returns (stream ResponseMessage) {}
	GetMessages(ctx context.Context, in *EmptyParams, opts ...grpc.CallOption) (*Messages, error)
	PostMessage(ctx context.Context, opts ...grpc.CallOption) (DataManager_PostMessageClient, error)
}

type dataManagerClient struct {
	cc *grpc.ClientConn
}

func NewDataManagerClient(cc *grpc.ClientConn) DataManagerClient {
	return &dataManagerClient{cc}
}

func (c *dataManagerClient) GetMessages(ctx context.Context, in *EmptyParams, opts ...grpc.CallOption) (*Messages, error) {
	out := new(Messages)
	err := c.cc.Invoke(ctx, "/proto.DataManager/GetMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataManagerClient) PostMessage(ctx context.Context, opts ...grpc.CallOption) (DataManager_PostMessageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DataManager_serviceDesc.Streams[0], "/proto.DataManager/PostMessage", opts...)
	if err != nil {
		return nil, err
	}
	x := &dataManagerPostMessageClient{stream}
	return x, nil
}

type DataManager_PostMessageClient interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ClientStream
}

type dataManagerPostMessageClient struct {
	grpc.ClientStream
}

func (x *dataManagerPostMessageClient) Send(m *Message) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dataManagerPostMessageClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DataManagerServer is the server API for DataManager service.
type DataManagerServer interface {
	//rpc UnaryTest (Message) returns (ResponseMessage) {}
	//rpc ServerStreamTest (RequestMessage) returns (stream ResponseMessage) {}
	//rpc ClientStreamTest (stream RequestMessage) returns (ResponseMessage) {}
	//rpc BiStreamTest (stream RequestMessage) returns (stream ResponseMessage) {}
	GetMessages(context.Context, *EmptyParams) (*Messages, error)
	PostMessage(DataManager_PostMessageServer) error
}

func RegisterDataManagerServer(s *grpc.Server, srv DataManagerServer) {
	s.RegisterService(&_DataManager_serviceDesc, srv)
}

func _DataManager_GetMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataManagerServer).GetMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DataManager/GetMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataManagerServer).GetMessages(ctx, req.(*EmptyParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataManager_PostMessage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DataManagerServer).PostMessage(&dataManagerPostMessageServer{stream})
}

type DataManager_PostMessageServer interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ServerStream
}

type dataManagerPostMessageServer struct {
	grpc.ServerStream
}

func (x *dataManagerPostMessageServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dataManagerPostMessageServer) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _DataManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.DataManager",
	HandlerType: (*DataManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMessages",
			Handler:    _DataManager_GetMessages_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PostMessage",
			Handler:       _DataManager_PostMessage_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "data.proto",
}
